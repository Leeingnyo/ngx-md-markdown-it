{"version":3,"file":"ngx-md.js.map","sources":["ng://ngx-md/lib/ngx-md.service.ts","ng://ngx-md/lib/ngx-md.component.ts","ng://ngx-md/lib/ngx-md.config.ts","ng://ngx-md/lib/ngx-md.module.ts"],"sourcesContent":["import { Injectable, SecurityContext } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItFootnote from 'markdown-it-footnote';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMdService {\n  private _renderer: any = MarkdownIt({ linkify: true, html: true }).use(MarkdownItFootnote);\n\n  constructor(\n    private _http: HttpClient,\n    private _domSanitizer: DomSanitizer\n  ) {\n    this.extendRenderer();\n    this.setMarkedOptions({});\n  }\n\n  // get the content from remote resource\n  getContent(path: string): Observable<any> {\n    return this._http.get(path, {responseType: 'text'})\n    .pipe(\n      map(res => res),\n      catchError(this.handleError)\n    );\n  }\n\n  public get renderer(): any {\n    return this._renderer;\n  }\n\n  public setMarkedOptions(options: any) {\n    options = Object.assign({\n      gfm: true,\n      tables: true,\n      breaks: false,\n      pedantic: false,\n      sanitize: false,\n      smartLists: true,\n      smartypants: false\n    }, options);\n    // TODO\n  }\n\n  // comple markdown to html\n  public compile(data: string) {\n     return this._renderer.render(data);\n  }\n\n  // add plugin\n  public loadPlugin(plugin, ...opts) {\n    this._renderer = this._renderer.use(plugin, ...opts);\n    return this;\n  }\n\n  // extend marked render to support footnote\n  private extendRenderer() {\n    // for angular routeer, add prefix location.href without fragment\n    const currentPageLinkWithoutHash = location.origin + location.pathname + location.search;\n    this._renderer.renderer.rules.footnote_ref = function render_footnote_ref(tokens, idx, options, env, slf) {\n      var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n      var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n      var refid   = id;\n\n      if (tokens[idx].meta.subId > 0) {\n        refid += ':' + tokens[idx].meta.subId;\n      }\n\n      return '<sup class=\"footnote-ref\"><a href=\"' + currentPageLinkWithoutHash + '#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n    }\n    this._renderer.renderer.rules.footnote_anchor = function render_footnote_anchor(tokens, idx, options, env, slf) {\n      var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n      if (tokens[idx].meta.subId > 0) {\n        id += ':' + tokens[idx].meta.subId;\n      }\n\n      /* â© with escape code to prevent display as Apple Emoji on iOS */\n      return ' <a href=\"' + currentPageLinkWithoutHash + '#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n    }\n  }\n\n  // handle error\n  private handleError(error: any): any {\n    let errMsg: string;\n    if (error instanceof fetch) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    return throwError(errMsg);\n  }\n}\n\n","\nimport { Component, ElementRef, OnInit, AfterViewInit, Input, PLATFORM_ID, Inject, EventEmitter } from '@angular/core';\nimport { NgxMdService } from './ngx-md.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Prism from 'prismjs';\nimport { Subscribable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'markdown,[Markdown],ngx-md,[NgxMd]',\n    template: '<ng-content></ng-content>',\n    styles: [\n        `.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string {\n            background: none;\n        }\n        .md-checkbox{\n            vertical-align: middle; margin: 0 0.2em 0.25em -1.6em; font-size: 16px;\n        }`\n    ]\n})\nexport class NgxMdComponent implements  AfterViewInit {\n    _path: string;\n    _data: string;\n    _md: any;\n    _ext: string;\n    changeLog: string[] = [];\n    errror: EventEmitter<any>  = new EventEmitter<any>();\n    loaded: EventEmitter<any>  = new EventEmitter<any>();\n\n    constructor(\n        public _mdService: NgxMdService,\n        public _el: ElementRef,\n        @Inject(PLATFORM_ID) public platformId: string\n    ) { }\n\n    @Input()\n    set path(value: string) {\n      if (value) {\n        this._path = value;\n        this.onPathChange();\n      }\n    }\n\n    @Input()\n    set data(value: string) {\n      if (value) {\n        this._data = value;\n        this.onDataChange(value);\n      }\n    }\n\n\n    /**\n     * Boolean indicating if the markdown content should be sanitized to avoid script injections\n     */\n    @Input() public sanitizeHtml = true;\n\n\n    // on input\n    onDataChange(data: string) {\n      if (data) {\n        this._el.nativeElement.innerHTML = this._mdService.compile(data);\n      } else {\n        this._el.nativeElement.innerHTML = '';\n      }\n      this.highlightContent(false);\n    }\n\n    /**\n     *  After view init\n     */\n    ngAfterViewInit() {\n      if (this._path) {\n        this.onPathChange();\n      } else if (!this._data) {\n        this.processRaw();\n      }\n    }\n\n    processRaw() {\n      this._md = this.prepare(decodeHtml(this._el.nativeElement.innerHTML));\n      this._el.nativeElement.innerHTML = this._mdService.compile(this._md);\n      this.highlightContent(false);\n    }\n\n    /**\n     * get remote conent;\n     */\n    onPathChange() {\n        this._ext = this._path && this._path.split('.').splice(-1).join();\n        this._mdService.getContent(this._path).pipe(catchError(this.handleError))\n            .subscribe(data => {\n                this.loaded.emit(data);\n                this._md = this._ext !== 'md' ? '```' + this._ext + '\\n' + data + '\\n```' : data;\n                this._el.nativeElement.innerHTML = this._mdService.compile(this.prepare(this._md));\n                this.highlightContent(false);\n            });\n    }\n\n    /**\n     * catch http error\n     */\n    private handleError(error: any): Subscribable<any> {\n        this.errror.emit(error);\n        console.error('An error occurred', error); // for demo purposes only\n        return error.message || error;\n    }\n\n    /**\n     * Prepare string\n     */\n     prepare(raw: string) {\n        if (!raw) {\n            return '';\n        }\n        if (this._ext === 'md' || !this.path) {\n            let isCodeBlock = false;\n            return raw.split('\\n').map((line: string) => {\n                // If the first non-blank chars are an opening/closing code block, toggle the flag\n                if (this.trimLeft(line).substring(0, 3) === '```') {\n                    isCodeBlock = !isCodeBlock;\n                }\n                return isCodeBlock ? line : line.trim();\n            }).join('\\n');\n        }\n        return raw.replace(/\\\"/g, '\\'');\n    }\n\n    /**\n     * Trim left whitespace\n     */\n    private trimLeft(line: string) {\n        return line.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    /**\n     * Use Prism to highlight code snippets only on the browser\n     */\n    private highlightContent(async: boolean): void {\n      if (isPlatformBrowser(this.platformId)) {\n        Prism.highlightAll(async);\n      }\n    }\n}\n\nfunction decodeHtml(html: string) { // https://stackoverflow.com/a/7394787/588521\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgxMdConfig {\n  /** config modue */\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxMdService } from './ngx-md.service';\nimport { NgxMdConfig } from './ngx-md.config';\nimport { NgxMdComponent } from './ngx-md.component';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [NgxMdComponent],\n  providers: [NgxMdService],\n  exports: [NgxMdComponent],\n})\nexport class NgxMdModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxMdModule,\n      providers: [NgxMdConfig]\n    };\n  }\n}\n"],"names":["Prism.highlightAll"],"mappings":"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"}
